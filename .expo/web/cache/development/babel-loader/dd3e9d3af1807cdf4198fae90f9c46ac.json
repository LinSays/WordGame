{"ast":null,"code":"import { filter, propEq, find, pathOr, pipe } from \"ramda\";\nimport { EmissionType } from \"../../interfaces\";\nimport { namespace } from \"./emissions.slice\";\nvar getAllEmissions = pathOr([], [namespace]);\n\nvar getEmissionById = function getEmissionById(state, id) {\n  return find(propEq(\"id\", id))(state[namespace]);\n};\n\nvar getEmissionsToMitigate = function getEmissionsToMitigate(state) {\n  return pipe(getAllEmissions, filter(propEq(\"isMitigated\", false)))(state);\n};\n\nvar getEmissionsMitigated = function getEmissionsMitigated(state) {\n  return pipe(getAllEmissions, filter(propEq(\"isMitigated\", true)))(state);\n};\n\nvar isTransportEmission = function isTransportEmission(emission) {\n  return emission.emissionType === EmissionType.transport;\n};\n\nvar isFoodEmission = function isFoodEmission(emission) {\n  return emission.emissionType === EmissionType.food;\n};\n\nvar isPurchaseEmission = function isPurchaseEmission(emission) {\n  return emission.emissionType === EmissionType.purchase;\n};\n\nvar isFashionEmission = function isFashionEmission(emission) {\n  return emission.emissionType === EmissionType.fashion;\n};\n\nvar isStreamingEmission = function isStreamingEmission(emission) {\n  return emission.emissionType === EmissionType.streaming;\n};\n\nvar isElectricityEmission = function isElectricityEmission(emission) {\n  return emission.emissionType === EmissionType.electricity;\n};\n\nvar isCustomEmission = function isCustomEmission(emission) {\n  return emission.emissionType === EmissionType.custom;\n};\n\nvar isMealEmission = function isMealEmission(emission) {\n  return emission.emissionType === EmissionType.meal;\n};\n\nvar isEatableEmission = function isEatableEmission(emission) {\n  return emission.emissionType === EmissionType.meal || emission.emissionType === EmissionType.food;\n};\n\nvar isOtherEmission = function isOtherEmission(emission) {\n  return emission.emissionType === EmissionType.custom || emission.emissionType === EmissionType.streaming || emission.emissionType === EmissionType.electricity || emission.emissionType === EmissionType.fashion || emission.emissionType === EmissionType.purchase || emission.emissionType === EmissionType.meal;\n};\n\nvar getTransportEmissions = pipe(getAllEmissions, filter(isTransportEmission));\nvar getFoodEmissions = pipe(getAllEmissions, filter(isFoodEmission));\nvar getStreamingEmissions = pipe(getAllEmissions, filter(isStreamingEmission));\nvar getElectricityEmissions = pipe(getAllEmissions, filter(isElectricityEmission));\nvar getPurchaseEmissions = pipe(getAllEmissions, filter(isPurchaseEmission));\nvar getFashionEmissions = pipe(getAllEmissions, filter(isFashionEmission));\nvar getMealEmissions = pipe(getAllEmissions, filter(isMealEmission));\nvar getEatableEmissions = pipe(getAllEmissions, filter(isEatableEmission));\nvar getCustomEmissions = pipe(getAllEmissions, filter(isCustomEmission));\nvar getOtherEmissions = pipe(getAllEmissions, filter(isOtherEmission));\nexport default {\n  getAllEmissions: getAllEmissions,\n  getTransportEmissions: getTransportEmissions,\n  getFoodEmissions: getFoodEmissions,\n  getStreamingEmissions: getStreamingEmissions,\n  getElectricityEmissions: getElectricityEmissions,\n  getFashionEmissions: getFashionEmissions,\n  getPurchaseEmissions: getPurchaseEmissions,\n  getCustomEmissions: getCustomEmissions,\n  getOtherEmissions: getOtherEmissions,\n  getMealEmissions: getMealEmissions,\n  getEatableEmissions: getEatableEmissions,\n  getEmissionById: getEmissionById,\n  getEmissionsToMitigate: getEmissionsToMitigate,\n  getEmissionsMitigated: getEmissionsMitigated\n};","map":{"version":3,"sources":["E:/Work/Web/ReactNative/Test/app/ducks/emissions/emissions.selectors.ts"],"names":["filter","propEq","find","pathOr","pipe","EmissionType","namespace","getAllEmissions","getEmissionById","state","id","getEmissionsToMitigate","getEmissionsMitigated","isTransportEmission","emission","emissionType","transport","isFoodEmission","food","isPurchaseEmission","purchase","isFashionEmission","fashion","isStreamingEmission","streaming","isElectricityEmission","electricity","isCustomEmission","custom","isMealEmission","meal","isEatableEmission","isOtherEmission","getTransportEmissions","getFoodEmissions","getStreamingEmissions","getElectricityEmissions","getPurchaseEmissions","getFashionEmissions","getMealEmissions","getEatableEmissions","getCustomEmissions","getOtherEmissions"],"mappings":"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","sourcesContent":["/* eslint-disable  @typescript-eslint/explicit-module-boundary-types */\r\nimport { filter, propEq, find, pathOr, pipe } from \"ramda\";\r\n\r\nimport { EmissionType } from \"interfaces\";\r\n\r\nimport { namespace } from \"./emissions.slice\";\r\n\r\nconst getAllEmissions = pathOr([], [namespace]);\r\n\r\nconst getEmissionById = (state, id: string) => find(propEq(\"id\", id))(state[namespace]);\r\n\r\nconst getEmissionsToMitigate = (state) =>\r\n  pipe(getAllEmissions, filter(propEq(\"isMitigated\", false)))(state);\r\n\r\nconst getEmissionsMitigated = (state) =>\r\n  pipe(getAllEmissions, filter(propEq(\"isMitigated\", true)))(state);\r\n\r\nconst isTransportEmission = (emission) => emission.emissionType === EmissionType.transport;\r\n\r\nconst isFoodEmission = (emission) => emission.emissionType === EmissionType.food;\r\n\r\nconst isPurchaseEmission = (emission) => emission.emissionType === EmissionType.purchase;\r\n\r\nconst isFashionEmission = (emission) => emission.emissionType === EmissionType.fashion;\r\n\r\nconst isStreamingEmission = (emission) => emission.emissionType === EmissionType.streaming;\r\n\r\nconst isElectricityEmission = (emission) => emission.emissionType === EmissionType.electricity;\r\n\r\nconst isCustomEmission = (emission) => emission.emissionType === EmissionType.custom;\r\n\r\nconst isMealEmission = (emission) => emission.emissionType === EmissionType.meal;\r\n\r\nconst isEatableEmission = (emission) =>\r\n  emission.emissionType === EmissionType.meal || emission.emissionType === EmissionType.food;\r\n\r\nconst isOtherEmission = (emission) =>\r\n  emission.emissionType === EmissionType.custom ||\r\n  emission.emissionType === EmissionType.streaming ||\r\n  emission.emissionType === EmissionType.electricity ||\r\n  emission.emissionType === EmissionType.fashion ||\r\n  emission.emissionType === EmissionType.purchase ||\r\n  emission.emissionType === EmissionType.meal;\r\n\r\nconst getTransportEmissions = pipe(getAllEmissions, filter(isTransportEmission));\r\n\r\nconst getFoodEmissions = pipe(getAllEmissions, filter(isFoodEmission));\r\n\r\nconst getStreamingEmissions = pipe(getAllEmissions, filter(isStreamingEmission));\r\n\r\nconst getElectricityEmissions = pipe(getAllEmissions, filter(isElectricityEmission));\r\n\r\nconst getPurchaseEmissions = pipe(getAllEmissions, filter(isPurchaseEmission));\r\n\r\nconst getFashionEmissions = pipe(getAllEmissions, filter(isFashionEmission));\r\n\r\nconst getMealEmissions = pipe(getAllEmissions, filter(isMealEmission));\r\n\r\nconst getEatableEmissions = pipe(getAllEmissions, filter(isEatableEmission));\r\n\r\nconst getCustomEmissions = pipe(getAllEmissions, filter(isCustomEmission));\r\n\r\nconst getOtherEmissions = pipe(getAllEmissions, filter(isOtherEmission));\r\n\r\nexport default {\r\n  getAllEmissions,\r\n  getTransportEmissions,\r\n  getFoodEmissions,\r\n  getStreamingEmissions,\r\n  getElectricityEmissions,\r\n  getFashionEmissions,\r\n  getPurchaseEmissions,\r\n  getCustomEmissions,\r\n  getOtherEmissions,\r\n  getMealEmissions,\r\n  getEatableEmissions,\r\n  getEmissionById,\r\n  getEmissionsToMitigate,\r\n  getEmissionsMitigated,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}