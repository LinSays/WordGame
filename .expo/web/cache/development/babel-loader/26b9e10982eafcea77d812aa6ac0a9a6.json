{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ElectricityType } from \"carbon-footprint\";\nimport { currentLanguage } from \"../../utils\";\nvar initialState = {\n  acceptedTermsOfUseVersion: 0,\n  activatedNotifications: false,\n  location: ElectricityType.world,\n  language: currentLanguage\n};\nvar userPreferences = createSlice({\n  name: \"userPreferences\",\n  initialState: initialState,\n  reducers: {\n    acceptTermsOfUse: function acceptTermsOfUse(state, action) {\n      state.acceptedTermsOfUseVersion = action.payload;\n    },\n    toggleNotifications: function toggleNotifications(state, action) {\n      state.activatedNotifications = action.payload;\n    },\n    updateLocation: function updateLocation(state, action) {\n      state.location = action.payload;\n    },\n    changeLanguage: function changeLanguage(state, action) {\n      state.language = action.payload;\n    }\n  }\n});\nvar _userPreferences$acti = userPreferences.actions,\n    acceptTermsOfUse = _userPreferences$acti.acceptTermsOfUse,\n    updateLocation = _userPreferences$acti.updateLocation,\n    toggleNotifications = _userPreferences$acti.toggleNotifications,\n    changeLanguage = _userPreferences$acti.changeLanguage;\nexport var actions = {\n  acceptTermsOfUse: acceptTermsOfUse,\n  updateLocation: updateLocation,\n  toggleNotifications: toggleNotifications,\n  changeLanguage: changeLanguage\n};\nexport var namespace = userPreferences.name;\nexport var reducer = userPreferences.reducer;","map":{"version":3,"sources":["E:/Work/Web/ReactNative/Test/app/ducks/userPreferences/userPreferences.slice.ts"],"names":["createSlice","ElectricityType","currentLanguage","initialState","acceptedTermsOfUseVersion","activatedNotifications","location","world","language","userPreferences","name","reducers","acceptTermsOfUse","state","action","payload","toggleNotifications","updateLocation","changeLanguage","actions","namespace","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,eAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,yBAAyB,EAAE,CADR;AAEnBC,EAAAA,sBAAsB,EAAE,KAFL;AAGnBC,EAAAA,QAAQ,EAAEL,eAAe,CAACM,KAHP;AAInBC,EAAAA,QAAQ,EAAEN;AAJS,CAArB;AAOA,IAAMO,eAAe,GAAGT,WAAW,CAAC;AAClCU,EAAAA,IAAI,EAAE,iBAD4B;AAElCP,EAAAA,YAAY,EAAZA,YAFkC;AAGlCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBADQ,4BACSC,KADT,EACgBC,MADhB,EAC+C;AACrDD,MAAAA,KAAK,CAACT,yBAAN,GAAkCU,MAAM,CAACC,OAAzC;AACD,KAHO;AAIRC,IAAAA,mBAJQ,+BAIYH,KAJZ,EAImBC,MAJnB,EAImD;AACzDD,MAAAA,KAAK,CAACR,sBAAN,GAA+BS,MAAM,CAACC,OAAtC;AACD,KANO;AAORE,IAAAA,cAPQ,0BAOOJ,KAPP,EAOcC,MAPd,EAOsD;AAC5DD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACD,KATO;AAURG,IAAAA,cAVQ,0BAUOL,KAVP,EAUcC,MAVd,EAU6C;AACnDD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACD;AAZO;AAHwB,CAAD,CAAnC;AAmBA,4BAKIN,eAAe,CAACU,OALpB;AAAA,IACEP,gBADF,yBACEA,gBADF;AAAA,IAEEK,cAFF,yBAEEA,cAFF;AAAA,IAGED,mBAHF,yBAGEA,mBAHF;AAAA,IAIEE,cAJF,yBAIEA,cAJF;AAOA,OAAO,IAAMC,OAAO,GAAG;AACrBP,EAAAA,gBAAgB,EAAhBA,gBADqB;AAErBK,EAAAA,cAAc,EAAdA,cAFqB;AAGrBD,EAAAA,mBAAmB,EAAnBA,mBAHqB;AAIrBE,EAAAA,cAAc,EAAdA;AAJqB,CAAhB;AAOP,OAAO,IAAME,SAAS,GAAGX,eAAe,CAACC,IAAlC;AAEP,OAAO,IAAMW,OAAO,GAAGZ,eAAe,CAACY,OAAhC","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ElectricityType } from \"carbon-footprint\";\r\n\r\nimport { currentLanguage } from \"utils\";\r\n\r\nconst initialState = {\r\n  acceptedTermsOfUseVersion: 0,\r\n  activatedNotifications: false,\r\n  location: ElectricityType.world,\r\n  language: currentLanguage,\r\n};\r\n\r\nconst userPreferences = createSlice({\r\n  name: \"userPreferences\",\r\n  initialState,\r\n  reducers: {\r\n    acceptTermsOfUse(state, action: PayloadAction<number>) {\r\n      state.acceptedTermsOfUseVersion = action.payload;\r\n    },\r\n    toggleNotifications(state, action: PayloadAction<boolean>) {\r\n      state.activatedNotifications = action.payload;\r\n    },\r\n    updateLocation(state, action: PayloadAction<ElectricityType>) {\r\n      state.location = action.payload;\r\n    },\r\n    changeLanguage(state, action: PayloadAction<string>) {\r\n      state.language = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst {\r\n  acceptTermsOfUse,\r\n  updateLocation,\r\n  toggleNotifications,\r\n  changeLanguage,\r\n} = userPreferences.actions;\r\n\r\nexport const actions = {\r\n  acceptTermsOfUse,\r\n  updateLocation,\r\n  toggleNotifications,\r\n  changeLanguage,\r\n};\r\n\r\nexport const namespace = userPreferences.name;\r\n\r\nexport const reducer = userPreferences.reducer;\r\n"]},"metadata":{},"sourceType":"module"}