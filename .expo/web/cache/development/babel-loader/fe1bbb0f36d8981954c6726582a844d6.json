{"ast":null,"code":"import { gt, __, not, pipe } from \"ramda\";\nvar isAboveZero = gt(__, 0);\nvar isNotValidNumber = pipe(isAboveZero, not);\n\nvar convertMinutesToHoursAnMinutes = function convertMinutesToHoursAnMinutes(minutes) {\n  if (isNotValidNumber(minutes)) {\n    return {\n      hours: 0,\n      minutes: 0\n    };\n  }\n\n  var hours = Math.floor(minutes / 60);\n  var minutesAboveHours = Math.round(minutes) % 60;\n  return {\n    hours: hours,\n    minutes: minutesAboveHours\n  };\n};\n\nvar getEarlierDate = function getEarlierDate(date1, date2) {\n  return date1 < date2 ? date1 : date2;\n};\n\nvar getLaterDate = function getLaterDate(date1, date2) {\n  return date1 > date2 ? date1 : date2;\n};\n\nexport default {\n  convertMinutesToHoursAnMinutes: convertMinutesToHoursAnMinutes,\n  getEarlierDate: getEarlierDate,\n  getLaterDate: getLaterDate\n};","map":{"version":3,"sources":["E:/Work/Web/ReactNative/Test/app/utils/time/time.ts"],"names":["gt","__","not","pipe","isAboveZero","isNotValidNumber","convertMinutesToHoursAnMinutes","minutes","hours","Math","floor","minutesAboveHours","round","getEarlierDate","date1","date2","getLaterDate"],"mappings":"AAAA,SAASA,EAAT,EAAaC,EAAb,EAAiBC,GAAjB,EAAsBC,IAAtB,QAAkC,OAAlC;AAEA,IAAMC,WAAW,GAAGJ,EAAE,CAACC,EAAD,EAAK,CAAL,CAAtB;AACA,IAAMI,gBAAgB,GAAGF,IAAI,CAACC,WAAD,EAAcF,GAAd,CAA7B;;AAOA,IAAMI,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,OAAD,EAAgC;AACrE,MAAIF,gBAAgB,CAACE,OAAD,CAApB,EAA+B;AAC7B,WAAO;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYD,MAAAA,OAAO,EAAE;AAArB,KAAP;AACD;;AACD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAArB,CAAd;AACA,MAAMI,iBAAiB,GAAGF,IAAI,CAACG,KAAL,CAAWL,OAAX,IAAsB,EAAhD;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAAEA,KAAT;AAAgBD,IAAAA,OAAO,EAAEI;AAAzB,GAAP;AACD,CARD;;AAUA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAcC,KAAd;AAAA,SAAqCD,KAAK,GAAGC,KAAR,GAAgBD,KAAhB,GAAwBC,KAA7D;AAAA,CAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACF,KAAD,EAAcC,KAAd;AAAA,SAAqCD,KAAK,GAAGC,KAAR,GAAgBD,KAAhB,GAAwBC,KAA7D;AAAA,CAArB;;AAEA,eAAe;AAAET,EAAAA,8BAA8B,EAA9BA,8BAAF;AAAkCO,EAAAA,cAAc,EAAdA,cAAlC;AAAkDG,EAAAA,YAAY,EAAZA;AAAlD,CAAf","sourcesContent":["import { gt, __, not, pipe } from \"ramda\";\r\n\r\nconst isAboveZero = gt(__, 0);\r\nconst isNotValidNumber = pipe(isAboveZero, not);\r\n\r\ninterface TimeProps {\r\n  hours: number;\r\n  minutes: number;\r\n}\r\n\r\nconst convertMinutesToHoursAnMinutes = (minutes: number): TimeProps => {\r\n  if (isNotValidNumber(minutes)) {\r\n    return { hours: 0, minutes: 0 };\r\n  }\r\n  const hours = Math.floor(minutes / 60);\r\n  const minutesAboveHours = Math.round(minutes) % 60;\r\n\r\n  return { hours: hours, minutes: minutesAboveHours };\r\n};\r\n\r\nconst getEarlierDate = (date1: Date, date2: Date): Date => (date1 < date2 ? date1 : date2);\r\n\r\nconst getLaterDate = (date1: Date, date2: Date): Date => (date1 > date2 ? date1 : date2);\r\n\r\nexport default { convertMinutesToHoursAnMinutes, getEarlierDate, getLaterDate };\r\n"]},"metadata":{},"sourceType":"module"}