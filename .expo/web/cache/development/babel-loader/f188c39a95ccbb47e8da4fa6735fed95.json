{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Work\\\\Web\\\\ReactNative\\\\Test\\\\app\\\\navigation\\\\Navigator\\\\RootNavigator.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ComponentsStyle } from \"../../style\";\nimport ProblemScreen from \"../../screens/Problem\";\nvar Stack = createStackNavigator();\n\nvar screenOptions = _objectSpread({\n  headerShown: false\n}, ComponentsStyle.transitionBetweenScreenPresets);\n\nvar RootNavigator = function RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        elevation: 0\n      },\n      cardStyle: {\n        backgroundColor: \"#000\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Problem\",\n    component: ProblemScreen,\n    options: screenOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RootNavigator;","map":{"version":3,"sources":["E:/Work/Web/ReactNative/Test/app/navigation/Navigator/RootNavigator.tsx"],"names":["React","createStackNavigator","ComponentsStyle","ProblemScreen","Stack","screenOptions","headerShown","transitionBetweenScreenPresets","RootNavigator","headerStyle","elevation","cardStyle","backgroundColor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,SAASC,eAAT;AAEA,OAAOC,aAAP;AAEA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;AACA,IAAMI,aAAa;AACjBC,EAAAA,WAAW,EAAE;AADI,GAEdJ,eAAe,CAACK,8BAFF,CAAnB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA0B;AAC9C,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADA;AAEbC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAFE,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAET,aAAxC;AAAuD,IAAA,OAAO,EAAEE,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAXD;;AAaA,eAAeG,aAAf","sourcesContent":["import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport { ComponentsStyle } from \"style\";\r\n\r\nimport ProblemScreen from \"../../screens/Problem\";\r\n\r\nconst Stack = createStackNavigator();\r\nconst screenOptions = {\r\n  headerShown: false,\r\n  ...ComponentsStyle.transitionBetweenScreenPresets,\r\n};\r\n\r\nconst RootNavigator = (): React.ReactElement => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: { elevation: 0 },\r\n        cardStyle: { backgroundColor: \"#000\" },\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Problem\" component={ProblemScreen} options={screenOptions} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default RootNavigator;\r\n"]},"metadata":{},"sourceType":"module"}